// Generated by CoffeeScript 1.4.0
(function() {
  var $;

  $ = jQuery;

  $.fn.extend({
    detectCard: function(options) {
      var Card, log, settings;
      settings = {
        debug: false,
        klass: 'card',
        showText: false
      };
      settings = $.extend(settings, options);
      log = function(msg) {
        if (settings.debug) {
          return typeof console !== "undefined" && console !== null ? console.log(msg) : void 0;
        }
      };
      Card = (function() {

        Card.prototype.type = 'none';

        Card.prototype.detected_type = '';

        Card.prototype.number = '';

        function Card(element, klass) {
          this.element = element;
          this.klass = klass;
        }

        Card.prototype.setup_elements = function() {
          if (!this.placeholder_exists()) {
            $(this.element).data('card', 'none');
            return $(this.element).after("<span class=\"" + this.klass + " none\"/>");
          }
        };

        Card.prototype.placeholder_exists = function() {
          return $("." + this.klass).length !== 0;
        };

        Card.prototype.type_has_changed = function() {
          return this.type !== this.detected_type;
        };

        Card.prototype.detect_type = function() {
          var _ref;
          this.detected_type = this.get_detected_type();
          if ((_ref = this.detected_type) == null) {
            this.detected_type = 'none';
          }
          return log("Card type detected was: " + this.detected_type);
        };

        Card.prototype.get_detected_type = function() {
          if (this.is_a_valid_number()) {
            log("Card number '" + this.number + "' is valid");
            return this.get_type().replace(" ", "_");
          }
        };

        Card.prototype.get_type = function() {
          if (this.number.match(/^4/)) {
            return 'visa';
          } else if (this.number.match(/^5[1-5]/)) {
            return 'mastercard';
          } else if (this.number.match(/^3[47]/)) {
            return 'american express';
          } else if (this.number.match(/^6(?:011|5)/)) {
            return 'discover';
          } else if (this.number.match(/^(?:2131|1800|35)/)) {
            return 'jcb';
          } else if (this.number.match(/^3(?:0[0-5]|[68])/)) {
            return 'diners club';
          } else if (this.number.match(/^5018|5020|5038|5893|6304|67(59|61|62|63)|0604/)) {
            return 'maestro';
          } else {
            return 'none';
          }
        };

        Card.prototype.is_a_valid_number = function() {
          return this.number !== "" && !isNaN(this.number);
        };

        Card.prototype.update_type = function() {
          $(this.element).data('card', this.detected_type);
          $("." + this.klass).removeClass(this.type).addClass(this.detected_type);
          log("Changed card type from '" + this.type + "' to '" + this.detected_type + "'");
          return this.type = this.detected_type;
        };

        Card.prototype.display_type = function() {
          return $("." + this.klass + "." + this.type).text(this.get_card_type_to_display());
        };

        Card.prototype.current_type = function() {
          return this.type;
        };

        Card.prototype.get_card_type_to_display = function() {
          switch (this.type) {
            case "visa":
              return "Visa";
            case 'mastercard':
              return "MasterCard";
            case 'maestro':
              return "Maestro";
            case 'american_express':
              return "American Express";
            case 'discover':
              return "Discover";
            case 'jcb':
              return "JCB";
            case 'diners_club':
              return "Diners Club";
            case 'none':
              return "";
          }
        };

        return Card;

      })();
      return this.each(function() {
        var card, get_card_number_from, remove_spaces_from;
        card = new Card(this, settings.klass);
        card.setup_elements();
        $(this).on('keyup', function(e) {
          card.number = get_card_number_from($(this).val());
          card.detect_type();
          if (card.type_has_changed()) {
            card.update_type();
            $(this).trigger('cardChanged', card.get_card_type_to_display());
            if (settings.showText) {
              return card.display_type();
            }
          }
        });
        get_card_number_from = function(card_input) {
          return remove_spaces_from(card_input);
        };
        return remove_spaces_from = function(value) {
          return value.replace(/\s/g, '');
        };
      });
    }
  });

}).call(this);
