// Generated by CoffeeScript 1.4.0
(function() {
  var $;

  $ = jQuery;

  $.fn.extend({
    replaceClass: function(find, replace) {
      return this.each(function() {
        if ($(this).hasClass(find)) {
          return $(this).removeClass(find).addClass(replace);
        }
      });
    },
    detectCard: function(options) {
      var log, settings;
      settings = {
        debug: false
      };
      settings = $.extend(settings, options);
      log = function(msg) {
        if (settings.debug) {
          return typeof console !== "undefined" && console !== null ? console.log(msg) : void 0;
        }
      };
      return this.each(function() {
        var current_card_type, get_card_number_from, is_a_number, remove_spaces_from;
        current_card_type = 'none';
        $(this).data('card', current_card_type);
        $(this).after("<span class=\"card " + current_card_type + "\"/>");
        $(this).on('keyup', function(e) {
          var card_number, detected_card_type;
          detected_card_type = 'none';
          card_number = get_card_number_from($(this).val());
          if (is_a_number(card_number)) {
            log("It's valid credit/debit card number");
            if (card_number.match(/^4/)) {
              detected_card_type = 'visa';
            }
            if (card_number.match(/^5[1-5]/)) {
              detected_card_type = 'mastercard';
            }
          }
          if (detected_card_type !== current_card_type) {
            $(this).data('card', detected_card_type);
            $(".card." + current_card_type).replaceClass(current_card_type, detected_card_type);
            $(".card." + detected_card_type).text(detected_card_type);
            current_card_type = detected_card_type;
            return log("Current card type: " + current_card_type);
          }
        });
        get_card_number_from = function(card_input) {
          return remove_spaces_from(card_input);
        };
        remove_spaces_from = function(value) {
          return value.replace(/\s/g, '');
        };
        return is_a_number = function(value) {
          return value !== "" && !isNaN(value);
        };
      });
    }
  });

}).call(this);
